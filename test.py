"""from agent import Agent

def give_back(a):
    return a

def double_it(a):
    return 2*a

def triple_it(a):
    return 3*a

def strings_to_functions(name_of_func, argument):
    switcher = {
        "asIs" : give_back,
        "double" : double_it,
        "triple" : triple_it
    }

    func = switcher.get(name_of_func, lambda : "nothing")

    return func(argument)

print(strings_to_functions("asIs",3))

import test_functions
import math
from tools import subtract_vectors

print(test_functions.target_function_value("rastrigin",[12,1,1]))

print(subtract_vectors([2,3,4], [1,-3,6]))"""

#testset = [[-4.353154596030157e-05, -0.00032701428360644436], [-8.309780084885389e-05, -0.0003503476429933595], [-0.0004500363482988585, 0.0007247838437859067], [-6.917201321722738e-05, 0.0013028727305416862], [0.0007802551746678207, -0.001720879479625043], [0.0020491147028657486, -0.0002814213139205675], [0.00040053506935048373, 0.0023118654970498186], [0.00030418035546771194, 0.002491942558734019], [-0.0011087297407620829, -0.0024702450359595073], [-0.002619042912531599, -0.0009626851568221573], [-0.0029835580117467367, 0.0013199853402705063], [-0.0012649669190251617, 0.0031229367875044234], [0.003291380303703675, -0.0012559512662418514], [0.0033877386494593482, 0.0011600314008976863], [0.003487659037389021, -0.0012331926091732085], [0.002399364107544967, 0.0028376953755608427], [-0.0036217431387827966, 0.0009638717368235577], [-0.00382418900090537, 0.00014170603157083927], [-0.0016775786058899188, 0.0035746877800372206], [0.003298150034452588, -0.002234458193488489], [-0.002472565151836339, 0.0031530229522795366], [-0.002506989386151753, -0.0032992142504711074], [-0.003471590788809098, 0.002305639832183142], [-0.0043889832478234995, -0.0002618828066428907], [-0.0021910316349998274, 0.0038495588106350165], [0.004004160098668586, 0.0023918344600168495], [0.003411005133726213, -0.0032425612172991805], [-0.0029156106786363857, -0.003779507855385461], [-0.0004804491619507757, 0.004758128628981], [-0.0015197749655253689, 0.00464399873103888], [-0.004992507462597211, -0.0013431663580718107], [0.003918740491338644, -0.0034023559415335956], [-0.0021401534943743467, 0.004903398302674464], [-0.0051835196081382534, 0.0016041352211031749], [0.0003538687063577512, 0.005431841074695543], [0.002550821885822378, 0.004812743516745138], [-0.00342832895900737, 0.0042831123415641575], [-0.0021096913429672587, 0.005441722651294556], [0.003651412881929038, 0.005018753143420939], [-0.004172573313312038, 0.004751597329113531], [-0.004936984636645294, 0.0049653811851699085], [-10.179745905611357, -5.786829793239721], [-5.9553558111689044, -11.934063370892522], [-5.943975715931268, -11.919427807628441], [12.913738262057917, 10.010543003191268], [15.547753535881366, 1.6443120006044596], [2.559853507469673, 18.747407439224244], [18.785685228442127, 7.00415367636562], [17.203474843587944, -20.275098679338697], [5.7040482333575895, 30.937633470898213]]

import matplotlib.pyplot as plt
import imageio
#import plotly.plotly as py
#import numpy as np
#fig, ax = plt.subplots()
#ax.scatter([item[0] for item in testset], [item[1] for item in testset])
#print(ax)
""""axes = plt.gca()
axes.set_xlim([-6,6])
axes.set_ylim([-6,6])
plt.scatter([item[0] for item in testset], [item[1] for item in testset])
plt.savefig("plots/test.png")"""

import glob
import os
print(glob.glob("plots/*.png"))